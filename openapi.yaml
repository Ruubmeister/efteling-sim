openapi: 3.0.0
info:
  title: Efteling simulator API
  description: This document provides all API calls for the different services for the Efteling simulator
  version: 0.0.1
components:
  schemas:
    gridLocationDto:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: number
          format: int32
        y:
          type: number
          format: int32
    navigationRequestDto:
      type: object
      required:
        - start_x
        - start_y
        - dest_x
        - dest_y
      properties:
        start_x:
          type: number
          format: int32
        start_y:
          type: number
          format: int32
        dest_x:
          type: number
          format: int32
        dest_y:
          type: number
          format: int32
    dinnerDto:
      type: object
      required:
        - meals
        - drinks
      properties:
        meals:
          type: array
          items:
            type: string
        drinks:
          type: array
          items:
            type: string
    employeeDto:
      type: object
      required:
        - id
        - firstName
        - lastName
        - skills
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        skills:
          type: array
          items:
            type: string
    fairyTaleDto:
      type: object
      required:
        - id
        - name
        - locationType
        - location
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        locationType:
          type: string
        location:
          $ref: '#/components/schemas/gridLocationDto'
    rideDto:
      type: object
      required:
        - id
        - status
        - name
        - minimumAge
        - minimumLength
        - durationInSec
        - maxPersons
        - visitorsInLine
        - visitorsInRide
        - endTime
        - employeesToSkill
        - locationType
        - location
        - status
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        minimumAge:
          type: number
        minimumLength:
          type: number
          format: float
        durationInSec:
          type: number
        maxPersons:
          type: number
        visitorsInLine:
          type: number
        visitorsInRide:
          type: number
        endTime:
          type: string
        employeesToSkill:
          type: object
          additionalProperties:
            type: string
        locationType:
          type: string
        location:
          $ref: '#/components/schemas/gridLocationDto'
        status:
          type: string
          enum:
            - OPEN
            - CLOSED
            - MAINTENANCE
    standDto:
      type: object
      required:
        - id
        - name
        - locationType
        - meals
        - drinks
        - location
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        locationType:
          type: string
        location:
          $ref: '#/components/schemas/gridLocationDto'
        meals:
          type: array
          items:
            type: string
        drinks:
          type: array
          items:
            type: string
    visitorDto:
      type: object
      required:
        - id
        - location
      properties:
        id:
          type: string
          format: uuid
        dateOfBirth:
          type: string
        location:
          $ref: '#/components/schemas/gridLocationDto'
        length:
          type: number
          format: float
        target:
          $ref: '#/components/schemas/gridLocationDto'
        step:
          type: number
    workplaceDto:
      type: object
      required:
        - id
        - locationType
      properties:
        id:
          type: string
          format: uuid
        locationType:
          type: string
paths:
#Fairy tales
  /api/v1/fairy-tales:
    servers:
      - url: http://fairytales:49980
    get:
      operationId: getAllFairyTales
      tags:
        - fairyTale
      responses:
        '200':
          description: A JSON array of fairy tales
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fairyTaleDto'
  /api/v1/fairy-tales/random:
    servers:
      - url: http://fairytales:49980
    get:
      operationId: getRandomFairyTale
      tags:
        - fairyTale
      responses:
        '200':
          description: A random fairy tale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fairyTaleDto'
  /api/v1/fairy-tales/{id}/new-location:
    servers:
      - url: http://fairytales:49980
    get:
      operationId: getNewFairyTale
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: exclude
          schema:
            type: string
          required: false        
      tags:
        - fairyTale
      responses:
        '200':
          description: A new location based on the request params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fairyTaleDto'

#Rides
  /api/v1/rides:
    servers:
      - url: http://rides:49981
    get:
      operationId: getAllRides
      tags:
        - ride
      responses:
        '200':
          description: A JSON array of rides
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rideDto'
  /api/v1/rides/random:
    servers:
      - url: http://rides:49981
    get:
      operationId: getRandomRide
      tags:
        - ride
      responses:
        '200':
          description: A random ride
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rideDto'
  /api/v1/rides/{id}/new-location:
    servers:
      - url: http://rides:49981
    get:
      operationId: getNewRide
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: exclude
          schema:
            type: string
          required: false        
      tags:
        - ride
      responses:
        '200':
          description: A new location based on the request params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rideDto'
  /api/v1/rides/{id}/status:
    servers:
      - url: http://rides:49981
    put:
      operationId: putRideStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rideDto'
      tags:
        - ride
      responses:
        '200':
          description: The updated ride
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rideDto'

#Stands
  /api/v1/stands:
    servers:
      - url: http://stands:49982
    get:
      operationId: getAllStands
      tags:
        - stand
      responses:
        '200':
          description: A JSON array of stands
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/standDto'
  /api/v1/stands/random:
    servers:
      - url: http://stands:49982
    get:
      operationId: getRandomStand
      tags:
        - stand
      responses:
        '200':
          description: A random stand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standDto'
  /api/v1/stands/{id}/new-location:
    servers:
      - url: http://stands:49982
    get:
      operationId: getNewStand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: exclude
          schema:
            type: string
          required: false        
      tags:
        - stand
      responses:
        '200':
          description: A new location based on the request params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standDto'
  /api/v1/stands/{id}:
    servers:
      - url: http://stands:49982
    get:
      operationId: getStand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid        
      tags:
        - stand
      responses:
        '200':
          description: The stand that is requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standDto'
  /api/v1/stands/order/{ticket}:
    servers:
      - url: http://stands:49982
    get:
      operationId: getOrder
      parameters:
        - name: ticket
          in: path
          required: true
          schema:
            type: string
            format: uuid        
      tags:
        - stand
      responses:
        '200':
          description: The order that is ready for picked up
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dinnerDto'
  /api/v1/stands/{id}/order:
    servers:
      - url: http://stands:49982
    post:
      operationId: postOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid        
      tags:
        - stand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Order dinner at a stand
          content:
            application/json:
              schema:
                type: string
# Visitors
  /api/v1/visitors:
    servers:
      - url: http://visitors:49984
    get:
      operationId: getAllVisitors
      tags:
        - visitor
      responses:
        '200':
          description: A JSON array of visitors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/visitorDto'
  /api/v1/visitors/{id}:
    servers:
      - url: http://visitors:49984
    get:
      operationId: getVisitor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid        
      tags:
        - visitor
      responses:
        '200':
          description: The visitor that is requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/visitorDto'
# Navigation
  /api/v1/navigate:
    servers:
      - url: http://navigation:49985
    post:
      operationId: postNavigate    
      tags:
        - navigation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/navigationRequestDto'
      responses:
        '200':
          description: Route to destination
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gridLocationDto'